/*
 * Copyright (C) 2015-2016 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include "am57xx-evm-common.dtsi"

/ {
	model = "TL5728-IDK";
	compatible = "ti,am5728-idk", "ti,am5728", "ti,dra742", "ti,dra74",
		     "ti,dra7";

	aliases {
		rtc0 = &mcp_rtc;
		ethernet2 = &pruss2_emac0;
		ethernet3 = &pruss2_emac1;
	};

	vmain: fixedregulator-vmain {
		compatible = "regulator-fixed";
		regulator-name = "VMAIN";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	/* Dual-MAC Ethernet application node on PRU-ICSS2 */
	pruss2_eth: pruss2_eth {
		compatible = "ti,am57-prueth";
		pruss = <&pruss2>;
		sram = <&ocmcram1>;
		interrupt-parent = <&pruss2_intc>;
		/*rx-queue-size = /bits/ 16 <254 134 134 254 48>;*/ /* RED */
		/*rx-queue-size = /bits/ 16 <194 194 194 194 48>;*/ /* EMAC */
		/* map is lowpcp-to->hipcp where val 3=q4, 2=q3, 1=q2, 0=q1 */
		/*pcp-rxq-map = /bits/ 8 <3 3 2 2 1 1 0 0>;*/

		pruss2_emac0: ethernet-mii0 {
			phy-handle = <&pruss2_eth0_phy>;
			phy-mode = "mii";
			interrupts = <20>, <22>, <23>;
			interrupt-names = "rx", "tx", "ptp_tx";
			/* Filled in by bootloader */
			local-mac-address = [00 00 00 00 00 00];
			/*tx-queue-size = /bits/ 16 <97 97 97 97 48>;*/
		};

		pruss2_emac1: ethernet-mii1 {
			phy-handle = <&pruss2_eth1_phy>;
			phy-mode = "mii";
			interrupts = <21>, <23>, <24>;
			interrupt-names = "rx", "tx", "ptp_tx";
			/* Filled in by bootloader */
			local-mac-address = [00 00 00 00 00 00];
			/*tx-queue-size = /bits/ 16 <97 97 97 97 48>;*/
		};
	};

	backlight {
		compatible = "pwm-backlight";
		pinctrl-names = "default";
		pinctrl-0 = <&ehrpwm0_pins>;

		pwms = <&ecap0 0 50000 0>;

		brightness-levels = <0 10 50 100 150 200 220 240 255>;
		default-brightness-level = <8>;
	};
};

&qspi {
	spi-max-frequency = <76800000>;
	m25p80@0 {
		spi-max-frequency = <76800000>;
	};
};

&mmc1 {
	pinctrl-names = "default", "hs", "sdr12", "sdr25", "sdr50", "ddr50", "sdr104";
	pinctrl-0 = <&mmc1_pins_default>;
};

&mmc2 {
	pinctrl-names = "default", "hs", "ddr_1_8v";
	pinctrl-0 = <&mmc2_pins_default>;
	pinctrl-1 = <&mmc2_pins_hs>;
	pinctrl-2 = <&mmc2_pins_ddr_rev20>;
};

&lcd0 {
	pinctrl-names = "default";
	pinctrl-0 = <&lcd_pins_default>;

	panel-timing {
		clock-frequency = <33000000>;
		hactive = <800>;
		vactive = <480>;
		hfront-porch = <210>;
		hback-porch = <16>;
		hsync-len = <30>;
		vback-porch = <10>;
		vfront-porch = <22>;
		vsync-len = <13>;
		hsync-active = <0>;
		vsync-active = <0>;
		de-active = <1>;
		pixelclk-active = <1>;
	};
};



#include "am57xx-evm-cmem.dtsi"

&tps659038{
	tps659038_pmic {
		smps12-in-supply = <&vmain>;
		smps3-in-supply = <&vmain>;
		smps45-in-supply = <&vmain>;
		smps6-in-supply = <&vmain>;
		smps7-in-supply = <&vmain>;
		smps8-in-supply = <&vmain>;
		smps9-in-supply = <&vmain>;
		ldo1-in-supply = <&vmain>;
		ldo2-in-supply = <&vmain>;
		ldo3-in-supply = <&vmain>;
		ldo4-in-supply = <&vmain>;
		ldo9-in-supply = <&vmain>;
		ldoln-in-supply = <&vmain>;
		ldousb-in-supply = <&vmain>;
		ldortc-in-supply = <&vmain>;

		regulators {
			smps6_reg: smps6 {
				regulator-max-microvolt = <1060000>;
			};

			smps9_reg: smps9 {
				/* VDD_3_3D */
				regulator-name = "smps9";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				regulator-boot-on;
			};

			ldousb_reg: ldousb {
				regulator-always-on;
			};

			ldortc_reg: ldortc {
				/* VDDA_RTC  */
				regulator-name = "ldortc";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				regulator-boot-on;
			};

			regen2: regen2 {
				/* Needed for PMIC internal resource */
				regulator-name = "regen2";
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};
};

&dra7_pmx_core {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c4_pins_default &i2c1_pins_default &gpio_pins_default>;
	i2c4_pins_default: i2c4_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3440, (PIN_INPUT_PULLUP | MUX_MODE7)) /* gpmc_a0.i2c4_scl */
			DRA7XX_CORE_IOPAD(0x3444, (PIN_INPUT_PULLUP | MUX_MODE7)) /* gpmc_a1.i2c4_sda */
		>;
	};

	uart10_pins_default: uart10_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3570, (PIN_INPUT_PULLUP | MUX_MODE8)) /* vin2a_d2.uart10_rxd */
			DRA7XX_CORE_IOPAD(0x3574, (PIN_INPUT_PULLUP | MUX_MODE8)) /* vin2a_d3.uart10_txd */
		>;
	};

	spi2_pins: spi2_pins {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x37c0, (INPUT_EN | MUX_MODE0))          /* spi2_sclk.spi2_sclk (A26) */
			DRA7XX_CORE_IOPAD(0x37c4, (INPUT_EN | MUX_MODE0))          /* spi2_d1.spi2_d1 (B22) */
			DRA7XX_CORE_IOPAD(0x37c8, (INPUT_EN | MUX_MODE0))          /* spi2_d0.spi2_d0 (G17) */
			DRA7XX_CORE_IOPAD(0x37cc, (PIN_OUTPUT_PULLUP | MUX_MODE0)) /* spi2_cs0.spi2_cs0 (B24) */
			DRA7XX_CORE_IOPAD(0x37b4, (PIN_OUTPUT_PULLUP | MUX_MODE3)) /* spi1_cs1.spi2_cs1 (A22) */
		>;
	};

	lcd_pins_default: lcd_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x35c8, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_clk */
			DRA7XX_CORE_IOPAD(0x35cc, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_de */
			DRA7XX_CORE_IOPAD(0x35d4, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_hsync */
			DRA7XX_CORE_IOPAD(0x35d8, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_vsync */
			DRA7XX_CORE_IOPAD(0x35dc, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d0 */
			DRA7XX_CORE_IOPAD(0x35e0, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d1 */
			DRA7XX_CORE_IOPAD(0x35e4, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d2 */
			DRA7XX_CORE_IOPAD(0x35e8, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d3 */
			DRA7XX_CORE_IOPAD(0x35ec, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d4 */
			DRA7XX_CORE_IOPAD(0x35f0, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d5 */
			DRA7XX_CORE_IOPAD(0x35f4, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d6 */
			DRA7XX_CORE_IOPAD(0x35f8, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d7 */
			DRA7XX_CORE_IOPAD(0x35fc, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d8 */
			DRA7XX_CORE_IOPAD(0x3600, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d9 */
			DRA7XX_CORE_IOPAD(0x3604, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d10 */
			DRA7XX_CORE_IOPAD(0x3608, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d11 */
			DRA7XX_CORE_IOPAD(0x360c, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d12 */
			DRA7XX_CORE_IOPAD(0x3610, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d13 */
			DRA7XX_CORE_IOPAD(0x3614, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d14 */
			DRA7XX_CORE_IOPAD(0x3618, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d15 */
			DRA7XX_CORE_IOPAD(0x361c, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d16 */
			DRA7XX_CORE_IOPAD(0x3620, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d17 */
			DRA7XX_CORE_IOPAD(0x3624, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d18 */
			DRA7XX_CORE_IOPAD(0x3628, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d19 */
			DRA7XX_CORE_IOPAD(0x362c, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d20 */
			DRA7XX_CORE_IOPAD(0x3630, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d21 */
			DRA7XX_CORE_IOPAD(0x3634, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d22 */
			DRA7XX_CORE_IOPAD(0x3638, (PIN_OUTPUT | MUX_MODE0 | SLEWCONTROL | MODE_SELECT)) /* vout1_d23 */
		>;
	};

	ads7846_pins: ads7846_pins {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3548, (PIN_INPUT_PULLUP | MUX_MODE14)) /* vin1a_d21.gpio3_25 */
		>;
	};

	pru2_mii_pins_default: pru2_mii_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3644, (PIN_INPUT_PULLUP | MUX_MODE14)) /* RMII_MHZ_50_CLK.gpio5_17 */
			DRA7XX_CORE_IOPAD(0x3684, (PIN_OUTPUT_PULLUP | MUX_MODE14)) /* usb2_drvvbus.gpio6_13 */
			DRA7XX_CORE_IOPAD(0x354c, (PIN_INPUT_PULLUP | MUX_MODE14)) /* vin1a_d22.gpio3_26*/
			DRA7XX_CORE_IOPAD(0x36b8, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr1.pr2_mii_mt0_clk (F12)*/
			DRA7XX_CORE_IOPAD(0x36d4, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr8.pr2_mii0_txen (B12) */
			DRA7XX_CORE_IOPAD(0x36e4, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr12.pr2_mii0_txd0 (E14) */
			DRA7XX_CORE_IOPAD(0x36e0, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr11.pr2_mii0_txd1 (A12) */
			DRA7XX_CORE_IOPAD(0x36dc, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr10.pr2_mii0_txd2 (B13) */
			DRA7XX_CORE_IOPAD(0x36d8, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr9.pr2_mii0_txd3 (A11) */
			DRA7XX_CORE_IOPAD(0x36e8, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr13.pr2_mii_mr0_clk (A13) */
			DRA7XX_CORE_IOPAD(0x36ec, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr14.pr2_mii0_rxdv (G14) */
			DRA7XX_CORE_IOPAD(0x36b4, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp1_axr0.pr2_mii0_rxer (G12) */
			DRA7XX_CORE_IOPAD(0x3724, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp3_aclkx.pr2_mii0_crs (B18) */
			DRA7XX_CORE_IOPAD(0x3728, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp3_fsx.pr2_mii0_col (F15) */
			DRA7XX_CORE_IOPAD(0x3710, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp2_axr3.pr2_mii0_rxlink (A16) */
			DRA7XX_CORE_IOPAD(0x370c, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp2_axr2.pr2_mii0_rxd0 (C15) */
			DRA7XX_CORE_IOPAD(0x36f8, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp2_fsx.pr2_mii0_rxd1 (A18) */
			DRA7XX_CORE_IOPAD(0x36f4, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp2_acllx.pr2_mii0_rxd2 (A19) */
			DRA7XX_CORE_IOPAD(0x36f0, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp1_axr15.pr2_mii0_rxd3 (F14) */
			DRA7XX_CORE_IOPAD(0x3774, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* gpio6_10.pr2_mii_mt1_clk (AC5) */
			DRA7XX_CORE_IOPAD(0x3778, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* gpio6_11.pr2_mii1_txen (AB4) */
			DRA7XX_CORE_IOPAD(0x377c, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mmc3_clk.pr2_mii1_txd3 (AD4) */
			DRA7XX_CORE_IOPAD(0x3780, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mmc3_cmd.pr2_mii1_txd2 (AC4) */
			DRA7XX_CORE_IOPAD(0x36a4, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp1_aclkx.pr2_mdio_mdclk (C14) */
			DRA7XX_CORE_IOPAD(0x36a8, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mcasp1_fsx.pr2_mdio_data (D14) */
			DRA7XX_CORE_IOPAD(0x3784, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mmc3_dat0.pr2_mii1_txd1 (AC7) */
			DRA7XX_CORE_IOPAD(0x3788, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* immc3_dat1.pr2_mii1_txd0 (AC6) */
			DRA7XX_CORE_IOPAD(0x378c, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mmc3_dat2.pr2_mii_mr1_clk (AC9) */
			DRA7XX_CORE_IOPAD(0x3790, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mmc3_dat3.pr2_mii1_rxdv (AC3) */
			DRA7XX_CORE_IOPAD(0x3794, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mmc3_dat4.pr2_mii1_rxd3 (AC8) */
			DRA7XX_CORE_IOPAD(0x3798, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mmc3_dat5.pr2_mii1_rxd2 (AD6) */
			DRA7XX_CORE_IOPAD(0x379c, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mmc3_dat6.pr2_mii1_rxd1 (AB8) */
			DRA7XX_CORE_IOPAD(0x37a0, (PIN_INPUT_PULLUP | MUX_MODE11)) /* mmc3_dat7.pr2_mii1_rxd0 (AB5) */
			DRA7XX_CORE_IOPAD(0x372c, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp3_axr0.pr2_mii1_rxer (B19) */
			DRA7XX_CORE_IOPAD(0x3730, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp3_axr1.pr2_mii1_rxlink (C17) */
			DRA7XX_CORE_IOPAD(0x3694, (PIN_INPUT_PULLUP | MUX_MODE11)) /* xref_clk0.pr2_mii1_col (D18) */
			DRA7XX_CORE_IOPAD(0x3698, (PIN_INPUT_PULLDOWN | MUX_MODE11)) /* mcasp2_axr9.pr2_mii1_crs (E17) */
		>;
	};

	gpio_pins_default: gpio_pins_default{
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3528, (PIN_INPUT_PULLUP | MUX_MODE14)) /* vin1a_d13.gpio3_17 (AF6) */
			DRA7XX_CORE_IOPAD(0x37ec, (PIN_OUTPUT_PULLDOWN | MUX_MODE14)) /* uart1_rtsn.gpio7_25 (C27) */
			DRA7XX_CORE_IOPAD(0x3550, (PIN_OUTPUT_PULLUP | MUX_MODE14)) /* vin1a_d23.gpio3_27 (AD3) */
			DRA7XX_CORE_IOPAD(0x34dc, (PIN_OUTPUT_PULLUP | MUX_MODE14)) /* vin1a_clk0.gpio2_30 (AG8) */
			DRA7XX_CORE_IOPAD(0x37b0, (PIN_INPUT_PULLUP | MUX_MODE14)) /* spi1_cs0.gpio7_10 (A24) */
			DRA7XX_CORE_IOPAD(0x381c, (PIN_INPUT_PULLUP | MUX_MODE14)) /* Wakeup1.gpio1_1 */
			DRA7XX_CORE_IOPAD(0x3820, (PIN_INPUT_PULLUP | MUX_MODE14)) /* Wakeup2.gpio1_2 */
			DRA7XX_CORE_IOPAD(0x3568, (PIN_INPUT_PULLUP | MUX_MODE14)) /* vin2a_d0.gpio4_1 */
			DRA7XX_CORE_IOPAD(0x352c, (PIN_INPUT_PULLDOWN | MUX_MODE14)) /* vin1a_d14.gpio3_18 */
		>;
	};
};

&i2c4 {
	status = "okay";
	clock-frequency = <400000>;

	mcp_rtc: rtc@6f {
		compatible = "microchip,mcp7941x";
		reg = <0x6f>;
		interrupts-extended = <&crossbar_mpu GIC_SPI 2 IRQ_TYPE_EDGE_RISING>,
				<&dra7_pmx_core 0x424>;
		interrupt-names = "irq", "wakeup";

		wakeup-source;
	};

	eeprom@50 {
		compatible = "24c04";
		reg = <0x52>;
		pagesize = <16>;
	};
};

&uart10 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart10_pins_default>;
};

&mcspi2 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_pins>;
	ti,pindir-d0-out-d1-in;

	ads7846@0 {
		pinctrl-names = "default";
		pinctrl-0 = <&ads7846_pins>;

		compatible = "ti,ads7846";

		reg = <0>;                      /* CS0 */
		spi-max-frequency = <1500000>;

		interrupt-parent = <&gpio3>;
		interrupts = <25 0>;            /* gpio3_25 */
		pendown-gpio = <&gpio3 25 0>;

		ti,x-min = /bits/ 16 <0x0>;
		ti,x-max = /bits/ 16 <0x0fff>;
		ti,y-min = /bits/ 16 <0x0>;
		ti,y-max = /bits/ 16 <0x0fff>;

		ti,x-plate-ohms = /bits/ 16 <180>;
		ti,pressure-max = /bits/ 16 <255>;

		ti,debounce-max = /bits/ 16 <10>;
		ti,debounce-tol = /bits/ 16 <30>;
		ti,debounce-rep = /bits/ 16 <1>;

		ti,settle-delay-usec = /bits/ 16 <150>;
		ti,keep-vref-on = <1>;

		linux,wakeup;
	};

	ad5724r@0 {
		compatible = "adi,ad5724r";
		reg = <1>; /* CS1 */
		spi-cpha; /* SPI_MODE_1 */
		spi-max-frequency = <1500000>;
	};
};

&pruss_soc_bus1 {
	status = "okay";

	pruss1: pruss@4b200000 {
		status = "okay";

	pru1_0: pru@4b234000 {
		interrupt-parent = <&pruss1_intc>;
		interrupts = <16>, <17>;
		interrupt-names = "vring", "kick";
		status = "okay";
	};

	pru1_1: pru@4b238000 {
		interrupt-parent = <&pruss1_intc>;
		interrupts = <18>, <19>;
		interrupt-names = "vring", "kick";
		status = "okay";
	};
	};
};

&pruss_soc_bus2 {
	status = "okay";

	pruss2: pruss@4b280000 {
		status = "okay";

	pru2_0: pru@4b2b4000 {
		interrupt-parent = <&pruss2_intc>;
		interrupts = <16>, <17>;
		interrupt-names = "vring", "kick";
		status = "okay";
	};

	pru2_1: pru@4b2b8000 {
		interrupt-parent = <&pruss2_intc>;
		interrupts = <18>, <19>;
		interrupt-names = "vring", "kick";
		status = "okay";
	};
	};
};

&pruss2_mdio {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pru2_mii_pins_default>;

	reset-gpios = <&gpio3 27 GPIO_ACTIVE_LOW>,
		<&gpio6 13 GPIO_ACTIVE_LOW>;
	reset-delay-us = <2>;   /* PHY datasheet states 1uS min */

	pruss2_eth0_phy: ethernet-phy@0 {
		reg = <0>;
		interrupt-parent = <&gpio3>;
		interrupts = <26 IRQ_TYPE_EDGE_FALLING>;
	};

	pruss2_eth1_phy: ethernet-phy@1 {
		reg = <1>;
		interrupt-parent = <&gpio5>;
		interrupts = <17 IRQ_TYPE_EDGE_FALLING>;
	};
};

&hdmi {
	status = "okay";

	vdda-supply = <&ldo3_reg>;
};

&tpd12s015 {
	compatible = "ti,tpd12s016", "ti,tpd12s015";

	gpios = <0>, /* optional CT_CP_HPD */
		<0>, /* optional LS_OE */
		<&gpio7 12 GPIO_ACTIVE_HIGH>;   /* HPD */
};

&davinci_mdio {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&rgmii0_pins_default &rgmii1_pins_default>;
};

&mac {
	status = "okay";
	dual_emac;
};

&gpio3 {
	ti,no-reset-on-init;
};

&dss {
	ti,no-reset-on-init;
	ti,no-idle;
};

&dispc {
	ti,no-reset-on-init;
	ti,no-idle;
};
